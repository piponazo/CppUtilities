language: cpp

compiler: 
    - gcc
#    - clang  

before_install:
    # g++4.8
    - if [ "$CXX" == "g++" ]; then sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test; fi

    # clang 3.5
#    - echo "deb http://llvm.org/apt/precise/ llvm-toolchain-precise main" | sudo tee -a /etc/apt/sources.list
#    - echo "deb http://llvm.org/apt/precise/ llvm-toolchain-precise-3.5 main" | sudo tee -a /etc/apt/sources.list
#    - sudo sh -c "echo 'deb http://llvm.org/apt/precise/ llvm-toolchain-precise main' >> /etc/apt/sources.list"
#    - sudo sh -c "echo 'deb http://llvm.org/apt/precise/ llvm-toolchain-precise-3.5 main' >> /etc/apt/sources.list"
#    - wget -O - http://llvm.org/apt/llvm-snapshot.gpg.key | sudo apt-key add -
      
    # Cmake
    - sudo add-apt-repository -y ppa:kalakris/cmake

    - sudo apt-get update -qq

install:
    # g++4.8
    - if [ "$CXX" = "g++" ]; then sudo apt-get install --allow-unauthenticated -qq g++-4.8 gcc-4.8; fi
#    - if [ "$CXX" = "g++" ]; then export export CXX="g++-4.8" CC="gcc-4.8" GCOV="gcov-4.8"; fi
    - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 80 --slave /usr/bin/g++ g++ /usr/bin/g++-4.8 --slave /usr/bin/gcov gcov /usr/bin/gcov-4.8

    # clang 3.5
#    - if [ "$CXX" == "clang++" ]; then sudo apt-get install --allow-unauthenticated -qq clang-3.5; fi
#    - sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-3.5 35 --slave /usr/bin/clang++-3.5 clang++ /usr/bin/clang++-3.5
#    - if [ "$CXX" == "clang++" ]; then export CXX="clang++-3.5"; fi

    - sudo pip install cpp-coveralls coveralls

    # CMake newest version
    - sudo apt-get install --allow-unauthenticated -qq cmake

    # Install lcov
    - wget http://ftp.de.debian.org/debian/pool/main/l/lcov/lcov_1.11.orig.tar.gz -O /tmp/lcov.tar.gz
    - cd /tmp/ && tar xf lcov.tar.gz
    - sudo make -C lcov-1.11/ install      

    # Install gtest
    - wget https://googletest.googlecode.com/files/gtest-1.7.0.zip -O /tmp/gtest.zip
    - cd /tmp/ && unzip gtest.zip && cd gtest-1.7.0
    - mkdir build && cd build && cmake -DBUILD_SHARED_LIBS=ON .. && make && sudo mv libg* /usr/local/lib
    - cd .. && sudo cp include/gtest /usr/local/include -R && cd $SRC_DIR

before_script:
    - export SRC_DIR=$PWD && mkdir build && export BIN_DIR=$PWD
    - bash travis/cmake.sh

script:
    - cd build
    - make
    - bin/test_all
    - coveralls -E "/usr/.*" -E "build/*.h" -E ".*/CMakeFiles/.*" --root $SRC_DIR --build-root $BIN_DIR
